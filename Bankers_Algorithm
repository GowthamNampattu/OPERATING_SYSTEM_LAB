#include<stdio.h>
int main(){
    int n,m,i,j,p;
    printf("Enter the number of processes\n");
    scanf("%d",&n);
    printf("Enter the number of resources\n");
    scanf("%d",&m);
    
    int allocation[n][m],max[n][m],need[n][m],available[m],request[m];
    
    printf("Enter the allocation matrix\n");
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d",&allocation[i][j]);
        }
    }
    
    printf("Enter the max matrix\n");
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d",&max[i][j]);
        }
    }
    
    printf("Enter the available resources\n");
    for(i=0;i<m;i++){
        scanf("%d",&available[i]);
    }
    bankers:
    //need matrix calculation
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            need[i][j]=max[i][j]-allocation[i][j];
        }
    }
    int finish[n],Seq[n],work[m];
    for(i=0;i<n;i++){
        finish[i]=0;
    }
    for(i=0;i<m;i++){
        work[i]=available[i];
    }
    
    int count=0;
    while(count<n){
        int safe=0;
        for(i=0;i<n;i++){
            if(!finish[i]){
                int canrun=1;
                for(j=0;j<m;j++){
                    if(need[i][j]>work[j]){
                        canrun=0;
                        break;
                    }
                }
                if(canrun){
                    for(j=0;j<m;j++){
                        work[j]+=allocation[i][j];
                    }
                    Seq[count]=i;
                    count++;
                    finish[i]=1;
                    safe=1;
                }
            }
        }
       if(safe==0){
            printf("System is in unsafe state\n");
            return 1;
    }
        }
        printf("Calculated need matrix\n");
       for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            printf("%d ",need[i][j]);
            
        }
        printf("\n");
    }   
    printf("System is in safe state\n");
    printf("Safe sequence : ");
    for(i=0;i<n;i++){
        printf("P%d  ",Seq[i]);
    }
    char choice;
    printf("If you have any more request?\tY/N\n");
    scanf(" %c",&choice);
    
    if(choice=='Y' || choice=='y'){
    printf("Enter which process need more resource?\n");
    scanf("%d",&p);
    
    printf("Enter the requested sequence\n");
    for(i=0;i<m;i++){
        scanf("%d",&request[i]);
    }
    for(j=0;j<m;j++){
        if(request[j]>need[p][j]){
            printf("Request can't be granted\n");
            return 0;
        }
    }
    for(j=0;j<m;j++){
        if(request[j]>available[j]){
            printf("Request can't be granted\n");
            return 0;
        }
    }
        for(j=0;j<m;j++){
           need[p][j]-=request[j];
           allocation[p][j]+=request[j];
           available[j]-=request[j];
        }
        
        printf("Updated allocation matrix\n");
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                printf("%d ",allocation[i][j]);
            }
            printf("\n");
        }
         printf("Updated available resources\n");
            for(j=0;j<m;j++){
                printf("%d ",available[j]);
            }
            printf("\n");
    goto bankers;
    }
    return 0;
}
